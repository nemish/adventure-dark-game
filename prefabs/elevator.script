require 'main.constants'

local GEARS = {"gear_active", "gear_active1"}
go.property("height", 400)


local function updateLabel(self)
    label.set_text("#label", "Push 'Action' button to activate...")
end


function init(self)
    self.speed = 4
    self.animating = false
    self.current_pos = 1
    updateLabel(self)
    msg.post("#label", "disable")
end


function on_stop(self, url, property)
    self.animating = false
    msg.post(PLAYER_URL, "elevator_stop")
    for i, name in pairs(GEARS) do
        msg.post("/" .. name, "elevator_stop")
    end
end


function update(self, dt)
    -- if self.animating then
    --     msg.post(PLAYER_URL, 'movable_move', { position = go.get_world_position(), obj_id = go.get_id() })
    -- end
end


local function activate(self)
    msg.post("#label", "enable")
end


local function deactivate(self)
    msg.post("#label", "disable")
end


local function do_elevate(self, height)
    deactivate(self)
    next_pos = go.get_position().y + height * self.current_pos
    for i, name in pairs(GEARS) do
        msg.post("/" .. name, "elevator_start", { direction = self.current_pos })
    end
    self.animating = true
    go.animate(".", "position.y", go.PLAYBACK_ONCE_FORWARD, next_pos, go.EASING_LINEAR, self.speed, 0, on_stop)
    self.current_pos = self.current_pos * -1
end


function on_message(self, message_id, message, sender)
    if message_id == hash("elevator_trigger") and not self.animating then
        do_elevate(self, self.height)
    elseif message_id == hash("deactivate") then
        deactivate(self)
    elseif message_id == hash("activate") then
        if not self.animating then
            activate(self)
        end
    end
end

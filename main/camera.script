require 'main.watcher'


function init(self)
    msg.post("#camera_comp", "acquire_camera_focus")

    -- Tell render script to use view and projection of camera
    msg.post("@render:", "set_cameratype_viewproj")

    -- Show on-screen controls
    -- msg.post("main:/controls#gui", "show_controls")

    -- Store current position and set target pos to the same since wanna start
    -- at a stand-still.
    self.is_initialized = false
    self.initial_position = go.get_world_position()
    self.pos = go.get_world_position()
    self.look_at = self.pos
end

function update(self, dt)
    -- Calculate a new position based on current pos interpolated towards current
    -- target position.
    if not self.is_initialized then
        self.pos = get_lerp_position(self)
        -- self.pos = vmath.lerp(0.03, self.pos, self.look_at)
        -- self.pos.z = 500
        self.pos.z = self.initial_position.z
        -- print(self.pos, go.get_position())
        go.set_position(self.pos)
    else
        local pos = calc_pos(self.look_at)
        pos.z = self.initial_position.z
        go.set_position(pos)
    end
end


function on_message(self, message_id, message, sender)
    if message_id == hash("look_at") then
        if message.initial then
            self.is_initialized = true
        end
        self.look_at = message.position
    elseif message_id == hash("screen_height") then
        print("screen_height", message.height)
    end
end
